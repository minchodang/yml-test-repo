name: Sync Upstream and Create PR

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # -------------------------------------------------
      # 0) 초기 세팅
      # -------------------------------------------------
      - name: Checkout Fork
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          # Git user
          git config user.name "minchodang"
          git config user.email "minsu910725@gmail.com"

          # 1) CRLF ↔ LF 문제 방지
          #    모든 텍스트 파일을 LF로 강제 변환
          git config core.autocrlf false
          git config core.eol lf
          echo "* text=auto eol=lf" >> .gitattributes
          git add .gitattributes
          git commit -m "chore: enforce LF endings via .gitattributes" || echo "No changes to commit"

      - name: Add Upstream Remote
        run: |
          git remote add upstream https://github.com/react-hook-form/documentation
          git fetch upstream
      
      - name: Fetch All
        run: git fetch --all

      - name: Checkout and Set Up Master Branch
        run: |
          git checkout -B master origin/master

      # -------------------------------------------------
      # 1) Merge Upstream/master (NO auto commit), ours on .github
      # -------------------------------------------------
      - name: Merge Upstream/master into master
        run: |
          set -e
          # --no-commit: merge 해도 자동 커밋 없음
          git merge upstream/master -X ours --no-commit || true

          # .github 충돌 시 ours(삭제)로 강제
          if [ -d ".github" ] || [ -f ".github" ]; then
            git checkout --ours .github || true
            git add .github || true
          fi

          # .github 폴더 삭제
          git rm -r --cached .github || true
          rm -rf .github

          # 스테이징
          git add .
          echo "Staged files:"
          git diff --cached --name-only

          # 단일 커밋
          git commit -m "Auto sync with upstream (removing .github)" || echo "No changes to commit"

      # -------------------------------------------------
      # 2) 변경사항 체크 ('.github' 제외)
      # -------------------------------------------------
      - name: Check for Changes
        id: changes
        run: |
          git diff upstream/master master -- . ':(exclude).github' > changes.diff
          if [ -s changes.diff ]; then
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "changes=false" >> $GITHUB_ENV
          fi

          echo "Detected changes? ${{ env.changes }}"
          cat changes.diff

      # -------------------------------------------------
      # 3) 기존 sync-upstream-PR이 있는지 확인
      # -------------------------------------------------
      - name: Check Existing PRs for Master Sync
        id: existing-prs
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         https://api.github.com/repos/${{ github.repository }}/pulls)
          EXISTING_PR=$(echo "$RESPONSE" | jq -r '.[] | select(.head.ref | startswith("sync-upstream-")) | .head.ref' | tr '\n' ' ')

          if [[ -n "$EXISTING_PR" ]]; then
              echo "existing_pr=true" >> $GITHUB_ENV
              echo "existing_pr_ref=$EXISTING_PR" >> $GITHUB_ENV
          else
              echo "existing_pr=false" >> $GITHUB_ENV
          fi

          echo "Existing PRs for master sync: $EXISTING_PR"

      # -------------------------------------------------
      # 4) 기존 PR과 비교
      # -------------------------------------------------
      - name: Compare Changes with Existing PRs for Master Sync
        id: compare-changes
        if: env.existing_pr == 'true' && env.changes == 'true'
        run: |
          ALL_EXISTING_INCLUDED=true
          for pr_ref in ${{ env.existing_pr_ref }}
          do
            git fetch origin "$pr_ref:$pr_ref-branch"
            if ! git diff --quiet upstream/master "$pr_ref-branch" -- . ':(exclude).github'; then
              ALL_EXISTING_INCLUDED=false
              break
            fi
          done

          if [ "$ALL_EXISTING_INCLUDED" = true ]; then
            echo "diff=false" >> $GITHUB_ENV
          else
            echo "diff=true" >> $GITHUB_ENV

            # 기존 PR 닫기
            for pr_ref in ${{ env.existing_pr_ref }}
            do
              PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                               -H "Accept: application/vnd.github.v3+json" \
                               https://api.github.com/repos/${{ github.repository }}/pulls \
                           | jq -r '.[] | select(.head.ref=="'$pr_ref'") | .number')
              curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER \
                   -d '{"state":"closed"}'
            done
          fi

      # -------------------------------------------------
      # 5) 변경사항이 있고, (기존PR이 없거나 diff가 다른 경우) => 새 PR 생성
      # -------------------------------------------------
      - name: Create Pull Request for Master Sync
        if: env.changes == 'true' && (env.diff == 'true' || env.existing_pr == 'false')
        run: |
          BRANCH_NAME=sync-upstream-$(date +%Y%m%d%H%M%S)
          git checkout -b "$BRANCH_NAME"

          git push origin "$BRANCH_NAME"

          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls \
               -d "{
                 \"title\": \"Auto Sync Upstream\",
                 \"body\": \"This PR syncs the repository with upstream changes and removes the entire .github directory.\",
                 \"head\": \"${BRANCH_NAME}\",
                 \"base\": \"master\"
               }"

      # =============================================================================
      # 아래 master-ko 업데이트 파트는 기존과 동일 (수정 X)
      # =============================================================================
      - name: Check Existing PRs for master-ko Update
        id: existing-prs-ko
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         "https://api.github.com/repos/${{ github.repository }}/pulls")
          EXISTING_KO_PR=$(echo "$RESPONSE" | jq -r '.[] | select(.head.ref | startswith("update-master-ko-")) | .head.ref' | tr '\n' ' ')
          if [[ -n "$EXISTING_KO_PR" ]]; then
              echo "existing_pr_ko=true" >> $GITHUB_ENV
              echo "existing_pr_ko_ref=$EXISTING_KO_PR" >> $GITHUB_ENV
          else
              echo "existing_pr_ko=false" >> $GITHUB_ENV
          fi
          echo "Existing PRs for master-ko update: $EXISTING_KO_PR"

      - name: Prepare master-ko Update
        run: |
          git checkout master
          git fetch origin master-ko || true
          git checkout -B master-ko origin/master-ko || git checkout -B master-ko

          git checkout master -- . ":(exclude)src"

          DATE=$(TZ="Asia/Seoul" date "+%Y/%m/%d %H:%M")
          git add .
          git commit -m "Update master-ko with upstream changes (excluding src) $DATE" || echo "No changes to commit"

      - name: Compare Changes with Existing master-ko PRs
        id: compare-changes-ko
        if: env.existing_pr_ko == 'true'
        run: |
          ALL_INCLUDED=true
          EXISTING_BRANCH=""
          for pr_ref in ${{ env.existing_pr_ko_ref }}
          do
            git fetch origin "$pr_ref:$pr_ref-branch"
            if ! git diff --quiet master-ko "$pr_ref-branch" -- . ':(exclude)src'; then
              ALL_INCLUDED=false
              EXISTING_BRANCH=$pr_ref
              break
            fi
          done

          if [ "$ALL_INCLUDED" = true ]; then
            echo "ko_diff=false" >> $GITHUB_ENV
          else
            echo "ko_diff=true" >> $GITHUB_ENV
            if [ -n "$EXISTING_BRANCH" ]; then
              PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                               -H "Accept: application/vnd.github.v3+json" \
                               "https://api.github.com/repos/${{ github.repository }}/pulls" \
                           | jq -r '.[] | select(.head.ref=="'$EXISTING_BRANCH'") | .number')
              curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER \
                   -d '{"state":"closed"}'
            fi
          fi

      - name: Update Existing master-ko PR Branch
        if: env.existing_pr_ko == 'true' && env.ko_diff == 'false'
        run: |
          EXISTING_BRANCH=$(echo "${{ env.existing_pr_ko_ref }}" | awk '{print $1}')
          git push origin master-ko:"$EXISTING_BRANCH" --force

      - name: Create New PR for master-ko Update
        if: env.ko_diff == 'true' || env.existing_pr_ko == 'false'
        run: |
          BRANCH_NAME=update-master-ko-$(date +%Y%m%d%H%M%S)
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"

          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls \
               -d "{
                 \"title\": \"Update master-ko (excluding src)\",
                 \"body\": \"This PR updates the master-ko branch with upstream changes except for the src directory.\",
                 \"head\": \"${BRANCH_NAME}\",
                 \"base\": \"master-ko\"
               }"